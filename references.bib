
% Foundations {{{

%% Kleene Algebra {{{

@techreport{tka,
  title={Typed {K}leene algebra},
  author={Kozen, Dexter},
  year={1998},
  month=mar,
  institution={Cornell University},
  number={TR98-1669},
  url={https://hdl.handle.net/1813/7323}
}

@inproceedings{pom,
  title={Partially ordered monads and powerset {K}leene algebras},
  author={Eklund, Patrik and G{\"a}hler, Werner},
  booktitle={Proceedings of the 10th Information Processing and Management of
    Uncertainty in Knowledge Based Systems Conference},
  series={IPMU 2004},
  volume={3},
  pages={1865--1869},
  year={2004},
  url={http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.108.7910}
}

@inproceedings{kleenem,
  title={Kleene monads: handling iteration in a framework of generic effects},
  author={Goncharov, Sergey and Schr{\"o}der, Lutz and Mossakowski, Till},
  booktitle={International Conference on
    Algebra and Coalgebra in Computer Science},
  pages={18--33},
  year={2009},
  organization={Springer}
}

@inproceedings{failkat,
  title={Equational Theories of Abnormal Termination Based on Kleene Algebra},
  author={Mamouras, Konstantinos},
  booktitle={International Conference on
    Foundations of Software Science and Computation Structures},
  pages={88--105},
  year={2017},
  organization={Springer}
}

%}}}

%% Abstract Interpretation {{{

@inproceedings{absint,
  title={Abstract interpretation: a unified lattice model for static
    analysis of programs by construction or approximation of fixpoints},
  author={Cousot, Patrick and Cousot, Radhia},
  booktitle={Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on
    Principles of programming languages},
  pages={238--252},
  year={1977},
  organization={ACM}
}

@article{aif,
  title={Abstract interpretation frameworks},
  author={Cousot, Patrick and Cousot, Radhia},
  journal={J. Log. Comput.},
  volume={2},
  number={4},
  pages={511--547},
  year={1992},
  publisher={Oxford University Press}
}

@inproceedings{aigp,
  title={Abstract interpretation of game properties},
  author={Henzinger, Thomas A and Majumdar, Rupak and Mang, Freddy and
    Raskin, Jean-Fran{\c{c}}ois},
  booktitle={International Static Analysis Symposium},
  pages={220--239},
  year={2000},
  organization={Springer}
}

%%}}}

%% Category theory {{{

@book{ctcs,
  title={Basic category theory for computer scientists},
  author={Pierce, Benjamin C},
  year={1991},
  publisher={MIT press},
  isbn={9780262660716},
}

@book{awodeyct,
  title={Category theory},
  author={Awodey, Steve},
  year={2010},
  publisher={Oxford university press},
  isbn={9780199237180},
}

@book{maclane,
  title={Categories for the working mathematician},
  author={Mac Lane, Saunders},
  year={1978},
  publisher={Springer Science \& Business Media},
  doi={10.1007/978-1-4757-4721-8},
}

@inproceedings{kappa,
  author="Hasegawa, Masahito",
  title="Decomposing typed lambda calculus into a couple of categorical
    programming languages",
  booktitle="Proceedings of the 6th International Conference on
    Category Theory and Computer Science",
  series="CTCS '95",
  year="1995",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="200--219",
  numpages="20",
  doi="10.1007/3-540-60164-3_28",
}

@book{egg,
  author = {Joyal, Andr√© and Tierney, Myles},
  title = {An extension of the {Galois} theory of {Grothendieck}},
  series = {Memoirs of the {American} {Mathematical} {Society}},
  number = {309},
  month = Sep,
  year = {1984},
  isbn = {978-0-8218-2312-5},
  publisher = {American Mathematical Society},
}

@article{tpbm,
  author = {Banaschewski, Bernhard and Nelson, Evelyn},
  title = {Tensor products and bimorphisms},
  journal = {Canadian Mathematical Bulletin},
  volume = {19},
  number = {4},
  year = {1976},
  pages = {385--402},
  doi = {10.4153/CMB-1976-060-2}
}

%% }}}

@inproceedings{pts,
  author = {Hutchins, DeLesley S.},
  title = {Pure Subtype Systems},
  booktitle = {Proceedings of the 37th Annual ACM SIGPLAN-SIGACT Symposium on
    Principles of Programming Languages},
  series = {POPL'10},
  year = {2010},
  isbn = {978-1-60558-479-9},
  location = {Madrid, Spain},
  pages = {287--298},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1706299.1706334},
  doi = {10.1145/1706299.1706334},
  acmid = {1706334},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {abstract reduction systems, dependent types, singleton types,
    subtyping, transitivity elimination},
}

@article{ccs,
  title={A calculus of communicating systems},
  author={Milner, Robin},
  journal={LNCS},
  volume={92},
  year={1980},
  publisher={springer-Verlag}
}

%}}}

% Game semantics {{{

%% Introductory material {{{

@incollection{cspgs,
  author="Abramsky, Samson",
  title="From {CSP} to Game Semantics",
  booktitle="Reflections on the Work of C.A.R. Hoare",
  year="2010",
  publisher="Springer",
  address="London",
  pages="33--45",
  abstract="In this short essay, we describe in informal terms how game
  semantics can be seen to arise as a perturbation of process calculi such
  as CSP, by making an explicit distinction between the r{\^o}les of the
  System and the Environment. Drawing out the consequences of this
  distinction uncovers a wealth of mathematical structure, with Game
  intuitions entering in a natural and compelling fashion. This leads
  ultimately to the elaboration of mathematically well-structured and
  behaviourally expressive semantic universes for computation. These
  provide a basis for fully abstract models of a wide range of programming
  languages, and lead on to algorithmic methods, with applications to
  compositional model-checking and program analysis.",
  isbn="978-1-84882-912-1",
  doi="10.1007/978-1-84882-912-1_2",
  url="https://doi.org/10.1007/978-1-84882-912-1_2"
}

@incollection{rosetta,
  title={Physics, topology, logic and computation: a {R}osetta {S}tone},
  author={Baez, John and Stay, Mike},
  booktitle={New structures for physics},
  pages={95--172},
  year={2010},
  publisher={Springer},
  address={Berlin, Heidelberg},
  doi={10.1007/978-3-642-12821-9_2}
}

@inproceedings{gamesem99,
  title={Game semantics},
  author={Abramsky, Samson and McCusker, Guy},
  booktitle={Computational logic: Proceedings of the 1997 Marktoberdorf Summer School},
  year={1999},
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="1--55",
  abstract="The aim of this chapter is to give an introduction to some
    recent work on the application of game semantics to the study of
    programming languages.",
  isbn="978-3-642-58622-4",
  doi="10.1007/978-3-642-58622-4_1"
}

@article{pcfajm,
  title = "Full Abstraction for PCF",
  journal = "Inf. Comput.",
  volume = "163",
  number = "2",
  pages = "409--470",
  year = "2000",
  issn = "0890-5401",
  doi = "10.1006/inco.2000.2930",
  url = "http://www.sciencedirect.com/science/article/pii/S0890540100929304",
  author = "Samson Abramsky and Radha Jagadeesan and Pasquale Malacaria",
  keywords = "game semantics, full abstraction, sequentiality, PCF,
    functional computation, programming language semantics, linear logic",
  abstract = "An intensional model for the programming language PCF is
    described in which the types of PCF are interpreted by games and the
    terms by certain history-free strategies. This model is shown to capture
    definability in PCF. More precisely, every compact strategy in the model
    is definable in a certain simple extension of PCF. We then introduce an
    intrinsic preorder on strategies and show that it satisfies some
    striking properties such that the intrinsic preorder on function types
    coincides with the pointwise preorder. We then obtain an
    order-extensional fully abstract model of PCF by quotienting the
    intensional model by the intrinsic preorder. This is the first
    syntax-independent description of the fully abstract model for PCF.
    (Hyland and Ong have obtained very similar results by a somewhat
    different route, independently and at the same time.) We then consider
    the effective version of our model and prove a universality theorem:
    every element of the effective extensional model is definable in PCF.
    Equivalently, every recursive strategy is definable up to observational
    equivalence."
}

@article{pcfho,
  title={On Full Abstraction for {PCF}: {I}, {II}, and {III}},
  author={Hyland, J. M. E. and Ong, C.-H. L.},
  journal={Inf. Comput.},
  volume={163},
  number={2},
  pages={285--408},
  year={2000},
  publisher={Elsevier},
  doi={10.1006/inco.2000.2917},
}

@article{gsll,
  title={A game semantics for linear logic},
  author={Blass, Andreas},
  journal={Ann. Pure Appl. Log.},
  volume={56},
  number={1--3},
  pages={183--220},
  year={1992},
  issn={0168-0072},
  doi={10.1016/0168-0072(92)90073-9},
  publisher={Elsevier}
}

@article{gsllaj,
  title={Games and full completeness for multiplicative linear logic},
  author={Abramsky, Samson and Jagadeesan, Radha},
  journal={J. Symb. Log.},
  volume={59},
  number={2},
  pages={543--574},
  year={1994},
  publisher={Cambridge University Press}
}

%}}}

%% Nondeterminism {{{

@inproceedings{gsfnd,
  title={A fully abstract game semantics for finite nondeterminism},
  author={Harmer, Russell and McCusker, Guy},
  booktitle = {Proceedings of the 14th Annual IEEE Symposium on
    Logic in Computer Science},
  series={LICS '99},
  pages={422--430},
  year={1999},
  doi={10.1109/LICS.1999.782637},
  publisher = {IEEE Computer Society},
  address = {USA},
}

@inproceedings{gscnd,
  author = {W. John Gowers and James D. Laird},
  title = {A Fully Abstract Game Semantics for Countable Nondeterminism},
  booktitle = {27th EACSL Annual Conference on Computer Science Logic (CSL 2018)},
  pages = {24:1--24:18},
  series = {Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN = {978-3-95977-088-0},
  ISSN = {1868-8969},
  year = {2018},
  volume = {119},
  editor = {Dan Ghica and Achim Jung},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address = {Dagstuhl, Germany},
  URL =	{http://drops.dagstuhl.de/opus/volltexte/2018/9691},
  URN =	{urn:nbn:de:0030-drops-96918},
  doi =	{10.4230/LIPIcs.CSL.2018.24},
  annote = {Keywords: semantics, nondeterminism, games and logic}
}

@inproceedings{gsndsheaves,
  title={Nondeterminism in game semantics via sheaves},
  author={Tsukada, Takeshi and Ong, C.-H. Luke},
  booktitle={Proceedings of the 30th Annual ACM/IEEE Symposium on
    Logic in Computer Science},
  series={LICS 2015},
  pages={220--231},
  year={2015},
  doi={10.1109/LICS.2015.30},
  publisher={IEEE Computer Society},
  address={USA}
}

@inproceedings{gseia,
  author={Andrzej S. Murawski},
  booktitle={Proceedings of the 23rd Annual IEEE Symposium on Logic in Computer Science},
  series={LICS 2008},
  title={Reachability Games and Game Semantics: Comparing Nondeterministic Programs},
  year={2008},
  pages={353-363},
  doi = {10.1109/LICS.2008.24},
  publisher = {IEEE Computer Society},
  address = {USA},
  month = {jun} 
}

@inproceedings{nacgs,
  title={Non-angelic concurrent game semantics},
  author={Castellan, Simon and Clairambault, Pierre and Hayman, Jonathan
    and Winskel, Glynn},
  booktitle={Proceedings of the 21st International Conference on
    Foundations of Software Science and Computation Structures},
  series={FoSSaCS 2018},
  pages={3--19},
  year={2018},
  doi={10.1007/978-3-319-89366-2_1},
  isbn={978-3-319-89366-2},
  publisher={Springer},
  address={Cham, Switzerland},
}

%}}}

%% Concurrency {{{

@InProceedings{agames,
  author="Melli{\`e}s, Paul-Andr{\'e} and Mimram, Samuel",
  title="Asynchronous Games: Innocence Without Alternation",
  booktitle="Proceedings of the 18th International Conference on
    Concurrency Theory",
  series="CONCUR 2007",
  year="2007",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="395--411",
  doi="10.1007/978-3-540-74407-8_27",
  isbn="978-3-540-74407-8"
}

@inproceedings{agames2,
  title={Asynchronous games 2: the true concurrency of innocence},
  author={Mellies, Paul-Andr{\'e}},
  booktitle={Proceedings of the 15th
    International Conference on Concurrency Theory},
  pages={448--465},
  series={CONCUR 2004},
  year={2004},
  publisher={Springer},
  address={Berlin, Heidelberg}
}

@article{tgames,
  title={Categorical combinatorics of scheduling and synchronization in game semantics},
  author={Melli{\`e}s, Paul-Andr{\'e}},
  journal={Proceedings of the ACM on Programming Languages},
  volume={3},
  number={POPL},
  pages={1--30},
  year={2019},
  publisher={ACM New York, NY, USA}
}

@InProceedings{asfgc,
  author="Ghica, Dan R. and Murawski, Andrzej S.",
  title="Angelic Semantics of Fine-Grained Concurrency",
  booktitle="Proceedings of the 7th International Conference on
    Foundations of Software Science and Computation Structures",
  series="FoSSaCS 2004",
  year="2004",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="211--225",
  abstract="We introduce a game model for a procedural programming
  language extended with primitives for parallel composition and
  synchronization on binary semaphores. The model uses an interleaved
  version of Hyland-Ong-style games, where most of the original
  combinatorial constraints on positions are replaced with a simple
  principle naturally related to static process creation. The model is
  fully abstract for may-equivalence.",
  doi="10.1007/978-3-540-24727-2_16",
  isbn="978-3-540-24727-2",
}

@INPROCEEDINGS{cgames,
  author = {Abramsky, Samson and Melli\`{e}s, Paul-Andr\'{e}},
  title = {Concurrent Games and Full Completeness},
  year = {1999},
  isbn = {0769501583},
  doi = {10.1109/LICS.1999.782638},
  publisher = {IEEE Computer Society},
  address = {USA},
  booktitle = {Proceedings of the 14th Annual IEEE Symposium on
    Logic in Computer Science},
  pages = {431--442},
  series = {LICS '99}
}

%% }}}

%% Various things {{{

@incollection{gsia,
  author="Abramsky, Samson and McCusker, Guy",
  title="Linearity, Sharing and State: A Fully Abstract Game Semantics for
    {I}dealized {A}lgol with Active Expressions",
  booktitle="Algol-like Languages",
  year="1997",
  publisher="Birkh{\"a}user",
  address="Boston, MA",
  pages="297--329",
  abstract="The manipulation of objects with state which changes over time
    is all-pervasive in computing. Perhaps the simplest example of such
    objects are the program variables of classical imperative languages. An
    important strand of work within the study of such languages, pioneered
    by John Reynolds, focusses on Idealized Algol, an elegant synthesis of
    imperative and functional features.",
  isbn="978-1-4757-3851-3",
  doi="10.1007/978-1-4757-3851-3_10",
  url="https://doi.org/10.1007/978-1-4757-3851-3_10"
}

@inproceedings{gscontrol,
  title={Full abstraction for functional languages with control},
  author={Laird, James},
  booktitle={Proceedings of the 12th Annual IEEE Symposium on
    Logic in Computer Science},
  series={LICS '97},
  pages={58--67},
  year={1997},
  doi={10.1109/LICS.1997.614931},
  publisher={IEEE Computer Society},
  address={USA}
}

@inproceedings{gsconcur,
  title={Angelic semantics of fine-grained concurrency},
  author={Ghica, Dan R and Murawski, Andrzej S},
  booktitle={International Conference on
    Foundations of Software Science and Computation Structures},
  pages={211--225},
  year={2004},
  organization={Springer}
}

@inproceedings{gsgr,
  author = {Samson Abramsky and Kohei Honda and Guy Mccusker},
  title = {A Fully Abstract Game Semantics for General References},
  booktitle = {Proceedings of the Thirteenth Annual IEEE Symposium on
    Logic in Computer Science},
  year = {1998},
  pages = {334--344},
  publisher = {Society Press}
}

@article{mwjava,
  title={Game semantics for interface middleweight {J}ava},
  author={Murawski, Andrzej S and Tzevelekos, Nikos},
  booktitle={ACM SIGPLAN Notices},
  volume={49},
  number={1},
  pages={517--528},
  year={2014},
  publisher={ACM}
}

%}}}

%% Refinement {{{

@article{atl,
  title={Alternating-Time Temporal Logic},
  author={Alur, Rajeev and Henzinger, Thomas A and Kupferman, Orna},
  journal = {J. ACM},
  volume={49},
  number={5},
  pages={672--713},
  numpages={42},
  issn={0004-5411},
  doi={10.1145/585265.585270},
  year={2002},
  month=sep,
  publisher={ACM},
  address={New York, NY, USA},
  keywords={model checking, Alternation, temporaxl logic, games}
}

@inproceedings{altref,
  author="Alur, Rajeev
    and Henzinger, Thomas A.
    and Kupferman, Orna
    and Vardi, Moshe Y.",
  title="Alternating refinement relations",
  booktitle="Proceedings of the 9th International Conference on
   Concurrency Theory",
  series="CONCUR '98",
  year="1998",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="163--178",
  doi="10.1007/BFb0055622",
  isbn="978-3-540-68455-8"
}

@inproceedings{rbgs-cal,
  author = {Koenig, J\'{e}r\'{e}mie and Shao, Zhong},
  title = {Refinement-Based Game Semantics for Certified Abstraction Layers},
  booktitle = {Proceedings of the 35th Annual ACM/IEEE Symposium on
    Logic in Computer Science},
  series = {LICS '20},
  year = {2020},
  isbn = {9781450371049},
  publisher = {ACM},
  address = {New York, NY, USA},
  doi = {10.1145/3373718.3394799},
  pages = {633‚Äì647},
  numpages = {15},
}
%  location = {Saarbr\"{u}cken, Germany},

@phdthesis{thesis,
  title={Refinement-Based Game Semantics for Certified Components},
  author={Koenig, Jeremie},
  year={2020},
  school={Yale University}
}

@inproceedings{act21,
  author = {Koenig, J\'er\'emie},
  title = {Grounding Game Semantics in Categorical Algebra},
  booktitle = {Proceedings of the Fourth International Conference
    on Applied Category Theory},
  series = {ACT 2021},
  year = {2021},
  note = {To appear},
}

@article{popl22,
author = {Oliveira Vale, Arthur and Melli\`{e}s, Paul-Andr\'{e} and Shao,
Zhong and Koenig, J\'{e}r\'{e}mie and Stefanesco, L\'{e}o},
title = {Layered and Object-Based Game Semantics},
year = {2022},
issue_date = {January 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {POPL},
doi = {10.1145/3498703},
journal = {Proc. ACM Program. Lang.},
month = {jan},
articleno = {42},
numpages = {32},
keywords = {certified abstraction layers, program refinement, game semantics,
object-based semantics}
}

%%}}}

@inproceedings{tmc,
  title={Traced monoidal categories},
  author={Joyal, Andr{\'e} and Street, Ross and Verity, Dominic},
  booktitle={Mathematical Proceedings of the Cambridge Philosophical
Society},
  volume={119},
  number={3},
  pages={447--468},
  year={1996},
  organization={Cambridge University Press}
}

@inproceedings{gsnecessary,
  title={Is game semantics necessary?},
  author={Blass, Andreas},
  booktitle={International Workshop on Computer Science Logic},
  pages={66--77},
  year={1993},
  organization={Springer}
}

%}}}

% Dual nondeterminism {{{

%% Hoare logic etc {{{

@article{gc,
  title={Guarded commands, nondeterminacy, and formal derivation of programs},
  author={Dijkstra, Edsger W},
  journal = {Commun. ACM},
  volume = {18},
  number = {8},
  year = {1975},
  month = aug,
  pages = {453--457},
  publisher = {ACM},
  address = {New York, NY, USA},
  issn = {0001-0782},
  doi = {10.1145/360933.360975},
}

@article{specstm,
  title={The specification statement},
  author={Morgan, Carroll},
  journal={ACM Trans. Program. Lang. Syst.},
  volume={10},
  number={3},
  pages={403--419},
  year={1988},
  month=jul,
  doi = {10.1145/44501.44503},
  publisher={ACM},
  address={New York, NY, USA}
}


%}}}

%% Refinement calculus {{{

@techreport{backthesis,
  author="Back, Ralph-Johan",
  title="On the correctness of refinement steps in program development",
  year="1978",
  institution="Department of Computer Science, University of Helsinky",
  address="Helsinki, Finland",
  isbn="951-45-1505-6",
  issn="0356-6951",
  number="A-1978-4",
}

@book{refcal,
  author="Back, Ralph-Johan and Wright, Joakim von",
  title="Refinement Calculus: A Systematic Introduction",
  publisher="Springer",
  address="New York",
  year="1998",
  doi="10.1007/978-1-4612-1674-2",
  isbn="978-1-4612-1674-2"
}

@article{refcalgames,
  title={Contracts, games, and refinement},
  author={Back, Ralph-Johan and von Wright, Joakim},
  journal={Inf. Comput.},
  volume={156},
  number={1-2},
  pages={25--45},
  year={2000},
  publisher={Elsevier}
}

@incollection{multirel,
  title={Binary multirelations},
  author={Rewitzky, Ingrid},
  booktitle={Theory and Applications of Relational Structures as
    Knowledge Instruments},
  pages={256--271},
  year={2003},
  doi={10.1007/978-3-540-24615-2_12},
  publisher={Springer},
  address={Berlin, Heidelberg},
}

@article{mrdnd,
title = "Modelling angelic and demonic nondeterminism with
multirelations",
journal = "Science of Computer Programming",
volume = "65",
number = "2",
pages = "140--158",
year = "2007",
issn = "0167-6423",
doi = "https://doi.org/10.1016/j.scico.2006.01.007",
author = "C.E. Martin and S.A. Curtis and I. Rewitzky",
keywords = "Multirelation, Predicate transformer, Agent, Strongest
postcondition, Angelic nondeterminism, Demonic nondeterminism, Resource
sharing",
abstract = "This paper presents an introduction to a calculus of binary
multirelations, which can model both angelic and demonic kinds of
non-determinism. The isomorphism between up-closed multirelations and
monotonic predicate transformers allows a different view of program
transformation, and program transformation calculations using
multirelations are easier to perform in some circumstances.
Multirelations are illustrated by modelling both kinds of
nondeterministic behaviour in games and resource-sharing protocols."
}

@inproceedings{dataref,
  title={Changing data representation in the refinement calculus},
  author={Back, Ralph-JR},
  booktitle={Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Volume II: Software Track},
  volume={2},
  pages={231--232},
  year={1989},
  organization={IEEE Computer Society}
}

%}}}

%% Morris and Tyrrell {{{

@inproceedings{augtyp,
  author="Morris, Joseph M.",
  title="Augmenting Types with Unbounded Demonic and Angelic Nondeterminacy",
  booktitle="Proceedings of the 7th International Conference on
    Mathematics of Program Construction",
  series="MPC 2004",
  year="2004",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="274--288",
  doi="10.1007/978-3-540-27764-4_15",
  isbn="978-3-540-27764-4"
}

@inproceedings{cspdnd,
  author="Tyrrell, Malcolm
    and Morris, Joseph M.
    and Butterfield, Andrew
    and Hughes, Arthur",
  title="A Lattice-Theoretic Model for an Algebra of
    Communicating Sequential Processes",
  booktitle="Proceedings of the Third International Colloquium on
    Theoretical Aspects of Computing",
  series="ICTAC 2006",
  year="2006",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="123--137",
  doi="10.1007/11921240_9",
  isbn="978-3-540-48816-3"
}

@article{dndf,
  title={Dually nondeterministic functions},
  author={Morris, Joseph M and Tyrrell, Malcolm},
  journal={ACM Trans. Program. Lang. Syst.},
  volume={30},
  number={6},
  pages={34},
  numpages={34},
  year={2008},
  month=oct,
  doi={10.1145/1391956.1391961},
  publisher={ACM}
}

%}}}

%% Interface automata {{{

@article{ia,
  title={Interface automata},
  author={de Alfaro, Luca and Henzinger, Thomas A.},
  journal={SIGSOFT Softw. Eng. Notes},
  volume={26},
  number={5},
  month=sep,
  pages={109--120},
  year={2001},
  publisher={ACM},
  address={New York, NY, USA},
  issn={0163-5948},
  doi={10.1145/503271.503226},
}

@inproceedings{itcd,
  title={Interface theories for component-based design},
  author={de Alfaro, Luca and Henzinger, Thomas A.},
  booktitle={Embedded Software: First International Workshop},
  series={EMSOFT 2001},
  pages={148--165},
  year={2001},
  doi={10.1007/3-540-45449-7_11},
  publisher={Springer},
  address={Berlin, Heidelberg}
}

@inproceedings{gmos,
  author="de Alfaro, Luca",
  title="Game Models for Open Systems",
  bookTitle="Verification: Theory and Practice: Essays Dedicated to
    Zohar Manna on the Occasion of His 64th Birthday",
  year="2003",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="269--289",
  abstract="An open system is a system whose behavior is jointly
  determined by its internal structure, and by the input it receives from
  the environment. To solve control and verification problems, open
  systems have often been modeled as games between the system and the
  environment; we argue that the game view of open systems should be
  extended also to the definitions of system refinement and composition.
  We give a symmetrical interpretation to games between system and
  environment: the moves of the system represent the outputs that the
  system can generate (the output guarantees), and symmetrically, the
  moves of the environment represent the inputs that the system can accept
  (the input assumptions). We argue in favor of defining refinement of
  open systems in terms of alternating simulation, which is the relation
  between games that plays the same role of simulation between transition
  systems. Alternating simulation captures the principle that a component
  refines another if it has weaker input assumptions, and stronger output
  guarantees. Furthermore, we argue in favor of a notion of composition
  that accounts for the compatibility between input assumptions and output
  guarantees, and that enables the synthesis of new input guarantees for
  the composed system. These game-theoretical notions of refinement and
  compatibility are related to the type-theoretical notions of subtyping
  and type compatibility, and give rise to an expressive modeling
  framework for component-based design and verification.",
  isbn="978-3-540-39910-0",
  doi="10.1007/978-3-540-39910-0_12",
  url="https://doi.org/10.1007/978-3-540-39910-0_12"
}

@article{gtf,
  title={Interfaces: A game-theoretic framework for
    reasoning about component-based systems},
  author={de Alfaro, Luca and Stoelinga, Mari{\"e}lle},
  journal={Electron. Notes Theor. Comput. Sci.},
  volume={97},
  pages={3--23},
  year={2004},
  doi={10.1016/j.entcs.2004.04.030},
  publisher={Elsevier}
}

%%}}}

@article{hyperprop,
  title={Hyperproperties},
  author={Clarkson, Michael R and Schneider, Fred B},
  journal={Journal of Computer Security},
  volume={18},
  number={6},
  pages={1157--1210},
  year={2010},
  publisher={IOS Press}
}

%}}}

% Compcert and the like {{{

%% CompCert {{{

@article{compcert,
 author = {Leroy, Xavier},
 title = {Formal Verification of a Realistic Compiler},
 journal = {Commun. ACM},
 issue_date = {July 2009},
 volume = {52},
 number = {7},
 month = jul,
 year = {2009},
 issn = {0001-0782},
 pages = {107--115},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1538788.1538814},
 doi = {10.1145/1538788.1538814},
 acmid = {1538814},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{coindbs,
  author="Leroy, Xavier",
  editor="Sestoft, Peter",
  title="Coinductive Big-Step Operational Semantics",
  booktitle="Programming Languages and Systems",
  year="2006",
  publisher="Springer Berlin, Heidelberg",
  address="Berlin, Heidelberg",
  pages="54--68",
  abstract="This paper illustrates the use of coinductive definitions
    and proofs in big-step operational semantics, enabling the latter to
    describe diverging evaluations in addition to terminating
    evaluations. We show applications to proofs of type soundness and to
    proofs of semantic preservation for compilers.",
  isbn="978-3-540-33096-7"
}

@article{compcertmm,
  title={Formal verification of a {C}-like memory model and its uses for
    verifying program transformations},
  author={Leroy, Xavier and Blazy, Sandrine},
  journal={J. Autom. Reason.},
  volume={41},
  number={1},
  pages={1--31},
  year={2008},
  publisher={Springer}
}

@techreport{compcertmmv2,
  author = {Xavier Leroy and Andrew W. Appel and Sandrine Blazy and Gordon Stewart},
  title = {The {CompCert} Memory Model, Version 2},
  institution = {INRIA},
  type = {Research report},
  number = {RR-7987},
  year = {2012},
  month = jun,
  url = {http://hal.inria.fr/hal-00703441},
  xtopic = {compcert},
  abstract = {A memory model is an important component of the formal
    semantics of imperative programming languages: it specifies the
    behavior of operations over memory states, such as reads and writes.
    The formally verified CompCert C compiler uses a sophisticated
    memory model that is shared between the semantics of its source
    language (the CompCert subset of C) and intermediate languages. The
    algebraic properties of this memory model play an important role in
    the proofs of semantic preservation for the compiler. The initial
    design of the CompCert memory model is described in an article by
    Leroy and Blazy (J. Autom. Reasoning 2008). The present research
    report describes version 2 of this memory model, improving over the
    main limitations of version 1. The first improvement is to expose
    the byte-level, in-memory representation of integers and floats,
    while preserving desirable opaqueness properties of pointer values.
    The second improvement is the integration of a fine-grained
    mechanism of permissions (access rights), which supports more
    aggressive optimizations over read-only data, and paves the way
    towards shared-memory, data-race-free concurrency in the style of
    Appel's Verified Software Toolchain project.}
}

@inproceedings{compsem,
  title={Mechanized semantics for compiler verification},
  author={Leroy, Xavier},
  booktitle={Proceedings of the 10th Asian Symposium on Programming Languages and Systems},
  series={APLAS 2012},
  pages={386--388},
  year={2012},
  doi={10.1007/978-3-642-35182-2_27},
  publisher={Springer},
  address={Berlin, Heidelberg}
}

@inproceedings{compcompcert,
  author = {Stewart, Gordon and Beringer, Lennart and Cuellar, Santiago and
    Appel, Andrew W.},
  title = {Compositional {CompCert}},
  booktitle = {Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT
    Symposium on Principles of Programming Languages},
  series = {POPL '15},
  year = {2015},
  isbn = {978-1-4503-3300-9},
  location = {Mumbai, India},
  pages = {275--287},
  numpages = {13},
  url = {http://doi.acm.org/10.1145/2676726.2676985},
  doi = {10.1145/2676726.2676985},
  acmid = {2676985},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {compcert, compiler correctness},
}

@inproceedings{qompcert,
  author = {Carbonneaux, Quentin and Hoffmann, Jan and
    Ramananandro, Tahina and Shao, Zhong},
  title = {End-to-end Verification of Stack-space Bounds for {C} Programs},
  booktitle = {Proceedings of the 35th ACM SIGPLAN Conference on
    Programming Language Design and Implementation},
  series = {PLDI '14},
  year = {2014},
  isbn = {978-1-4503-2784-8},
  location = {Edinburgh, United Kingdom},
  pages = {270--281},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/2594291.2594301},
  doi = {10.1145/2594291.2594301},
  acmid = {2594301},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {compiler construction, formal verification, program logics,
    quantitative verification, stack-space bounds},
}

@article{compcerttso,
  author = {\v{S}ev\v{c}\'{\i}k, Jaroslav and Vafeiadis, Viktor and
    Zappa Nardelli, Francesco and Jagannathan, Suresh and Sewell, Peter},
  title = {{CompCertTSO}: A Verified Compiler for Relaxed-Memory Concurrency},
  journal = {J. ACM},
  issue_date = {June 2013},
  volume = {60},
  number = {3},
  month = jun,
  year = {2013},
  issn = {0004-5411},
  pages = {22:1--22:50},
  articleno = {22},
  numpages = {50},
  url = {http://doi.acm.org/10.1145/2487241.2487248},
  doi = {10.1145/2487241.2487248},
  acmid = {2487248},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Relaxed memory models, semantics, verified compilation},
}

@inproceedings{compcertshm,
  title={Verified Compilation for Shared-Memory {C}},
  author={Beringer, Lennart and Stewart, Gordon and Dockins, Robert and Appel, Andrew W},
  booktitle={ESOP 2014},
  pages={107--127},
  year={2014}
}

@inproceedings{sepcompcert,
  author = {Kang, Jeehoon and Kim, Yoonseung and Hur, Chung-Kil and
    Dreyer, Derek and Vafeiadis, Viktor},
  title = {Lightweight Verification of Separate Compilation},
  booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on
    Principles of Programming Languages},
  series = {POPL'16},
  year = {2016},
  isbn = {978-1-4503-3549-2},
  location = {St. Petersburg, FL, USA},
  pages = {178--190},
  numpages = {13},
  url = {http://doi.acm.org/10.1145/2837614.2837642},
  doi = {10.1145/2837614.2837642},
  acmid = {2837642},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {CompCert, Compositional compiler verification, separate compilation},
}

@inproceedings{cpp15,
  author = {Ramananandro, Tahina and Shao, Zhong and Weng, Shu-Chun and
    Koenig, J{\'e}r{\'e}mie and Fu, Yuchen},
  title = {A Compositional Semantics for Verified Separate Compilation and Linking},
  booktitle = {Proceedings of the 2015 Conference on Certified Programs and Proofs},
  series = {CPP '15},
  year = {2015},
  isbn = {978-1-4503-3296-5},
  location = {Mumbai, India},
  pages = {3--14},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/2676724.2693167},
  doi = {10.1145/2676724.2693167},
  acmid = {2693167},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {compositional semantics, horizontal composition,
    verified compilation and linking, vertical composition},
}

@article{compcertm,
  author = {Song, Youngju and Cho, Minki and Kim, Dongjoo and
    Kim, Yonghyun and Kang, Jeehoon and Hur, Chung-Kil},
  title = {CompCertM: CompCert with C-Assembly Linking and
    Lightweight Modular Verification},
  year = {2019},
  issue_date = {January 2020},
  publisher = {ACM},
  address = {New York, NY, USA},
  volume = {4},
  number = {POPL},
  url = {https://doi.org/10.1145/3371091},
  doi = {10.1145/3371091},
  journal = {Proc. ACM Program. Lang.},
  month = dec,
  articleno = {23},
  numpages = {31},
}

@article{stackaware,
author = {Wang, Yuting and Wilke, Pierre and Shao, Zhong},
title = {An Abstract Stack Based Approach to Verified Compositional
Compilation to Machine Code},
year = {2019},
issue_date = {January 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {POPL},
url = {https://doi.org/10.1145/3290375},
doi = {10.1145/3290375},
journal = {Proc. ACM Program. Lang.},
month = jan,
articleno = {62},
numpages = {30},
keywords = {abstract stack, machine code generation, compositional
compilation, certified compilers, memory model}
}

@inproceedings{compcerto,
  title={CompCertO: compiling certified open C components},
  author={Koenig, J{\'e}r{\'e}mie and Shao, Zhong},
  booktitle={Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
  pages={1095--1109},
  year={2021}
}

%%}}}

%% Tools {{{

@inproceedings{vst,
 author = {Appel, Andrew W.},
 title = {Verified Software Toolchain},
 booktitle = {Proceedings of the 20th European Symposium on Programming},
 series = {ESOP 2011},
 year = {2011},
 isbn = {978-3-642-19717-8},
 pages = {1--17},
 doi = {10.1007/978-3-642-19718-5_1},
 publisher = {Springer},
 address = {Berlin, Heidelberg},
}

@phdthesis{verasco,
  title={Verasco: a formally verified C static analyzer},
  author={Jourdan, Jacques-Henri},
  year={2016}
}

@inproceedings{csmith,
  author = {Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
  title = {Finding and Understanding Bugs in C Compilers},
  booktitle = {Proceedings of the 32Nd ACM SIGPLAN Conference on
    Programming Language Design and Implementation},
  series = {PLDI '11},
  year = {2011},
  isbn = {978-1-4503-0663-8},
  location = {San Jose, California, USA},
  pages = {283--294},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1993498.1993532},
  doi = {10.1145/1993498.1993532},
  acmid = {1993532},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {automated testing, compiler defect, compiler testing,
    random program generation, random testing},
}

%%}}}

%% Compositional Compilation {{{

@inproceedings{pilsner,
  author = {Neis, Georg and Hur, Chung-Kil and Kaiser, Jan-Oliver and
    McLaughlin, Craig and Dreyer, Derek and Vafeiadis, Viktor},
  title = {Pilsner: A Compositionally Verified Compiler for a
    Higher-order Imperative Language},
  booktitle = {Proceedings of the 20th ACM SIGPLAN International
    Conference on Functional Programming},
  series = {ICFP 2015},
  year = {2015},
  isbn = {978-1-4503-3669-7},
  location = {Vancouver, BC, Canada},
  pages = {166--178},
  numpages = {13},
  url = {http://doi.acm.org/10.1145/2784731.2784764},
  doi = {10.1145/2784731.2784764},
  acmid = {2784764},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Compositional compiler verification, abstract types,
    higher-order state, parametric simulations, recursive types,
    transitivity},
}

@article{next700,
  author = {Patterson, Daniel and Ahmed, Amal},
  title = {The Next 700 Compiler Correctness Theorems (Functional Pearl)},
  journal = {Proc. ACM Program. Lang.},
  issue_date = {August 2019},
  volume = {3},
  number = {ICFP},
  month = jul,
  year = {2019},
  issn = {2475-1421},
  pages = {85:1--85:29},
  articleno = {85},
  numpages = {29},
  url = {http://doi.acm.org/10.1145/3341689},
  doi = {10.1145/3341689},
  acmid = {3341689},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {compilers, verification},
}

%}}}

@inproceedings{freshlook,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {A {Fresh} {Look} at {Separation} {Algebras} and {Share} {Accounting}},
	isbn = {978-3-642-10672-9},
	doi = {10.1007/978-3-642-10672-9_13},
	abstract = {Separation Algebras serve as models of Separation Logics; Share Accounting allows reasoning about concurrent-read/exclusive- write resources in Separation Logic. In designing a Concurrent Separation Logic and in mechanizing proofs of its soundness, we found previous axiomatizations of separation algebras and previous systems of share accounting to be useful but imperfect. We adjust the axioms of separation algebras; we demonstrate an operator calculus for constructing new separation algebras; we present a more powerful system of share accounting with a new, simple model; and we provide a reusable Coq development.},
	language = {en},
	booktitle = {Programming {Languages} and {Systems}},
	publisher = {Springer},
	author = {Dockins, Robert and Hobor, Aquinas and Appel, Andrew W.},
	editor = {Hu, Zhenjiang},
	year = {2009},
	keywords = {Bounded Distributive Lattice, Lift Operator, Separation Logic, Share Model, Token Counting},
	pages = {161--177},
}

%}}}

% Verification projects {{{

%% DeepSpec {{{

@article{deepspec,
  title={Position paper: the science of deep specification},
  author={Appel, Andrew W and Beringer, Lennart and Chlipala, Adam and Pierce,
    Benjamin C and Shao, Zhong and Weirich, Stephanie and Zdancewic, Steve},
  journal={Phil. Trans. R. Soc. A},
  volume={375},
  number={2104},
  pages={20160331},
  year={2017},
  doi={10.1098/rsta.2016.0331},
  publisher={The Royal Society Publishing}
}

@article{itree,
  title={Interaction trees: representing recursive and impure programs in Coq},
  author={Xia, Li-yao and Zakowski, Yannick and He, Paul and
    Hur, Chung-Kil and Malecha, Gregory and Pierce, Benjamin C and
    Zdancewic, Steve},
  journal={Proc. ACM Program. Lang.},
  volume={4},
  number={POPL},
  year={2019},
  month=dec,
  articleno={51},
  numpages={32},
  doi={10.1145/3371119},
  publisher={ACM},
  address={New York, NY, USA}
}

@inproceedings{itrees,
  title={From C to interaction trees:
    specifying, verifying, and testing a networked server},
  author={Koh, Nicolas and Li, Yao and Li, Yishuai and Xia, Li-yao and
    Beringer, Lennart and Honor{\'e}, Wolf and Mansky, William and
    Pierce, Benjamin C and Zdancewic, Steve},
  booktitle={Proceedings of the 8th ACM SIGPLAN International Conference on
    Certified Programs and Proofs},
  pages={234--248},
  year={2019},
  organization={ACM}
}

%%}}}

%% CertiKOS {{{

@inproceedings{popl15,
 author = {Gu, Ronghui and Koenig, J{\'e}r{\'e}mie and Ramananandro, Tahina and
   Shao, Zhong and Wu, Xiongnan (Newman) and Weng, Shu-Chun and Zhang, Haozhong and
   Guo, Yu},
 title = {Deep Specifications and Certified Abstraction Layers},
 booktitle = {Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT
   Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 pages = {595--608},
 url = {http://doi.acm.org/10.1145/2676726.2676975},
 doi = {10.1145/2676726.2676975},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstraction layer, certified compilers, certified os kernels,
   deep specification, modularity, program verification},
}

@inproceedings{ccal,
  title={Certified concurrent abstraction layers},
  author={Gu, Ronghui and Shao, Zhong and Kim, Jieung and
    Wu, Xiongnan Newman and Koenig, J{\'e}r{\'e}mie and
    Sj{\"o}berg, Vilhelm and Chen, Hao and Costanzo, David and
    Ramananandro, Tahina},
  booktitle={Proceedings of the 39th ACM SIGPLAN Conference on
    Programming Language Design and Implementation},
  series = {PLDI 2018},
  pages={646--661},
  year={2018},
  doi = {10.1145/3192366.3192381},
  publisher={ACM},
  address = {New York, NY, USA},
}

@inproceedings{osdi16,
 author = {Gu, Ronghui and Shao, Zhong and Chen, Hao and Wu, Xiongnan and
   Kim, Jieung and Sj\"{o}berg, Vilhelm and Costanzo, David},
 title = {CertiKOS: An Extensible Architecture for Building Certified
   Concurrent OS Kernels},
 booktitle = {Proceedings of the 12th USENIX Conference on
   Operating Systems Design and Implementation},
 series = {OSDI'16},
 year = {2016},
 isbn = {978-1-931971-33-1},
 pages = {653--669},
 url = {https://dl.acm.org/doi/10.5555/3026877.3026928},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

%%}}}

%% Other system stuff {{{

@inproceedings{fscq,
  title={Using Crash {H}oare logic for certifying the {FSCQ} file system},
  author={Chen, Haogang and Ziegler, Daniel and Chajed, Tej and
    Chlipala, Adam and Kaashoek, M. Frans and Zeldovich, Nickolai},
  booktitle={Proceedings of the 25th Symposium on Operating Systems Principles},
  series={SOSP '15},
  pages={18--37},
  year={2015},
  isbn={9781450338349},
  publisher={ACM},
  address={New York, NY, USA},
  doi={10.1145/2815400.2815402},
}

@inproceedings{safe,
  title={A verified information-flow architecture},
  author={Azevedo de Amorim, Arthur and Collins, Nathan and
    DeHon, Andr{\'e} and Demange, Delphine and
      Hri{\c{t}}cu, C{\u{a}}t{\u{a}}lin and Pichardie, David and
      Pierce, Benjamin C and Pollack, Randy and Tolmach, Andrew},
 booktitle = {Proceedings of the 41st Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
   series = {POPL'14},
  pages={165--178},
  year={2014},
  doi={10.1145/2535838.2535839},
  publisher={ACM},
  address = {New York, NY, USA}  
}

@inproceedings{cakeml,
  title={{CakeML}: A Verified Implementation of {ML}},
  author={Ramana Kumar and Magnus Myreen and Michael Norrish and Scott Owens},
 booktitle = {Proceedings of the 41st Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
   series = {POPL'14},
  pages={179--191},
  year={2014},
  doi={10.1145/2578855.2535841},
  publisher={ACM},
  address = {New York, NY, USA}  
}

@inproceedings{vellvm,
  title={Formalizing the LLVM intermediate representation for
    verified program transformations},
  author={Zhao, Jianzhou and Nagarakatte, Santosh and Martin, Milo MK and
    Zdancewic, Steve},
 booktitle = {Proceedings of the 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
   series = {POPL'12},
  pages={427--440},
  year={2012},
  doi={10.1145/2103621.2103709},
  publisher={ACM},
  address = {New York, NY, USA}  
}

@inproceedings{sel4,
  title={{seL4}: formal verification of an {OS} kernel},
  author={Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and
Andronick, June and Cock, David and Derrin, Philip and Elkaduwe, Dhammika and
Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael and others},
  booktitle={Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems
    Principles},
  series={SOSP '09},
  pages={207--220},
  year={2009},
  publisher={ACM},
  address = {New York, NY, USA},
  doi = {10.1145/1629575.1629596}, 
}

%%}}}

@article{kami,
  author = {Choi, Joonwon and Vijayaraghavan, Muralidaran and
    Sherman, Benjamin and Chlipala, Adam and Arvind},
  title = {Kami: A Platform for High-Level Parametric Hardware
    Specification and Its Modular Verification},
  year = {2017},
  issue_date = {September 2017},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {1},
  number = {ICFP},
  url = {https://doi.org/10.1145/3110268},
  doi = {10.1145/3110268},
  journal = {Proc. ACM Program. Lang.},
  month = aug,
  articleno = {24},
  numpages = {30},
  keywords = {formal verification, hardware, proof assistants}
}

@inproceedings{hosl-fo,
  title={Connecting Higher-Order Separation Logic to a First-Order Outside World},
  author={Mansky, William and Honor{\'e}, Wolf and Appel, Andrew W},
  booktitle={Proceedings of the 29th European Symposium on Programming},
  series={ESOP '20},
  pages={428--455},
  year={2020},
  publisher={Springer, Cham}
}

@misc{math-classes,
  title={Type Classes for Mathematics in Type Theory},
  author={Bas Spitters and Eelis van der Weegen},
  year={2011},
  eprint={1102.1323},
  archivePrefix={arXiv},
  primaryClass={cs.LO}
}

%}}}

% Logical relations {{{

@article{lrp,
 author = {Hermida, Claudio and Reddy, Uday S. and Robinson, Edmund P.},
 title = {Logical Relations and Parametricity - A {R}eynolds Programme for Category Theory and Programming Languages},
 journal = {Electron. Notes Theor. Comput. Sci.},
 issue_date = {March, 2014},
 volume = {303},
 month = mar,
 year = {2014},
 issn = {1571-0661},
 pages = {149--180},
 numpages = {32},
 url = {http://dx.doi.org/10.1016/j.entcs.2014.02.008},
 doi = {10.1016/j.entcs.2014.02.008},
 acmid = {2599154},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Category Theory, Data abstraction, Definability, Fibrations, Homomorphisms, Information hiding, Logical Relations, Natural Transformations, Parametric polymorphism, Reflexive Graphs, Relation lifting, Relational Parametricity, Universal algebra},
}

@book{modlog,
  title={Modal Logic},
  author={Blackburn, Patrick and Rijke, Maarten de and Venema, Yde},
  series={Cambridge Tracts in Theoretical Computer Science},
  DOI={10.1017/CBO9781107050884},
  publisher={Cambridge University Press},
  year={2001},
}

%}}}

% Algebraic effects {{{

@InProceedings{effadq,
  author="Plotkin, Gordon and Power, John",
  title="Adequacy for Algebraic Effects",
  booktitle="Proceedings of the 4th International Conference on
    Foundations of Software Science and Computation Structures",
  series="FoSSaCS 2001",
  year="2001",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="1--24",
  doi="10.1007/3-540-45315-6_1",
  isbn="978-3-540-45315-4"
}

@inproceedings{eff,
  title={Handlers of algebraic effects},
  author={Plotkin, Gordon and Pretnar, Matija},
  booktitle={Proceedings of the 18th European Symposium on Programming},
  series={ESOP 2009},
  pages={80--94},
  year={2009},
  doi={10.1007/978-3-642-00590-9_7},
  publisher={Springer},
  address={Berlin, Heidelberg}
}

@article{freemon,
  title={Free algebras, input processes and free monads},
  author={Trnkov{\'a}, V{\v{e}}ra and Ad{\'a}mek, Ji{\v{r}}{\'\i} and
    Koubek, V{\'a}clav and Reiterman, Jan},
  journal={Commentationes Mathematicae Universitatis Carolinae},
  volume={16},
  number={2},
  pages={339--351},
  year={1975},
  publisher={Charles University in Prague, Faculty of Mathematics and Physics}
}

@article{monads,
  title={Notions of computation and monads},
  author={Moggi, Eugenio},
  journal={Information and computation},
  volume={93},
  number={1},
  pages={55--92},
  year={1991},
  publisher={Elsevier}
}

% }}}

@InProceedings{bltsp,
  author="Nain, Sumit and Vardi, Moshe Y.",
  title="Branching vs.¬†Linear Time: Semantical Perspective",
  booktitle="Proceedings of the 5th International Symposium on
    Automated Technology for Verification and Analysis",
  series="ATVA 2007",
  year="2007",
  publisher="Springer",
  address="Berlin, Heidelberg",
  pages="19--34",
  doi="10.1007/978-3-540-75596-8_4",
  isbn="978-3-540-75596-8"
}

@inproceedings{tsfa,
  title={Trace semantics is fully abstract},
  author={Nain, Sumit and Vardi, Moshe Y},
  booktitle={Proceedings of the 24th Annual IEEE Symposium on Logic In Computer Science},
  series={LICS 2009},
  pages={59--68},
  year={2009},
  doi={10.1109/LICS.2009.12},
  publisher={IEEE Computer Society},
  address={USA}
}

@article{shao10,
author = "Zhong Shao",
title = "Certified Software",
journal = "Communications of the {ACM}",
year = 2010,
month = dec,
volume="53",
number="12",
pages="56--66",
doi = {10.1145/1859204.1859226},
}

@article{hoare69,
author = "C. A. R. Hoare",
title = "An Axiomatic Basis for Computer Programming",
journal = "Communications of the {ACM}",
volume= 12,
number= 10,
pages={576--580},
year = 1969,
month = oct,
publisher = {ACM},
address = {New York, NY, USA},
issn = {0001-0782},
doi = {10.1145/363235.363259},
}

@article{pgc,
  author = {Ern\'e, M. and Koslowski, J. and Melton, A. and Strecker, G. E.},
  title = {A Primer on Galois Connections},
  journal = {Ann. N. Y. Acad. Sci.},
  volume = {704},
  number = {1},
  pages = {103-125},
  doi = {10.1111/j.1749-6632.1993.tb52513.x},
  year = {1993}
}

@misc{compcerto21tr,
author="J√©r√©mie Koenig and Zhong Shao",
title="CompCertO: Compiling Certified Open C Components",
 month="April",year="2021",
 howpublished = {Yale Univ. Technical Report YALEU/DCS/TR-1556; \url{https://flint.cs.yale.edu/publications/compcerto.html}}
}

@article{dcsd,
  title={String diagrams for double categories and equipments},
  author={Myers, David Jaz},
  journal={arXiv preprint arXiv:1612.02762},
  year={2016}
}

@inproceedings{caots,
  title={A canonical algebra of open transition systems},
  author={Lavore, Elena Di and Gianola, Alessandro and Rom{\'a}n, Mario and
Sabadini, Nicoletta and Soboci{\'n}ski, Pawe{\l}},
  booktitle={International Conference on Formal Aspects of Component
Software},
  pages={63--81},
  year={2021},
  organization={Springer}
}

@article{feedback,
  title={Feedback, trace and fixed-point semantics},
  author={Katis, Piergiulio and Sabadini, Nicoletta and Walters, Robert FC},
  journal={RAIRO-Theoretical Informatics and Applications},
  volume={36},
  number={2},
  pages={181--194},
  year={2002},
  publisher={EDP Sciences}
}

@article{nominalcompcert,
  author = {Wang, Yuting and Zhang, Ling and Shao, Zhong and Koenig, J\'{e}r\'{e}mie},
  title = {Verified Compilation of C Programs with a Nominal Memory Model},
  year = {2022},
  issue_date = {January 2022},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {6},
  number = {POPL},
  url = {https://doi.org/10.1145/3498686},
  doi = {10.1145/3498686},
  journal = {Proc. ACM Program. Lang.},
  month = {jan},
  articleno = {25},
  numpages = {31},
  keywords = {Verified Compilation, Memory Models, Nominal Techniques} }