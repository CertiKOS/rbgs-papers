@article{lrp,
 author = {Hermida, Claudio and Reddy, Uday S. and Robinson, Edmund P.},
 title = {Logical Relations and Parametricity - A Reynolds Programme for Category Theory and Programming Languages},
 journal = {Electron. Notes Theor. Comput. Sci.},
 issue_date = {March, 2014},
 volume = {303},
 month = mar,
 year = {2014},
 issn = {1571-0661},
 pages = {149--180},
 numpages = {32},
 url = {http://dx.doi.org/10.1016/j.entcs.2014.02.008},
 doi = {10.1016/j.entcs.2014.02.008},
 acmid = {2599154},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Category Theory, Data abstraction, Definability, Fibrations, Homomorphisms, Information hiding, Logical Relations, Natural Transformations, Parametric polymorphism, Reflexive Graphs, Relation lifting, Relational Parametricity, Universal algebra},
}
@techreport{compcertmmv2,
  author = {Xavier Leroy and Andrew W. Appel and Sandrine Blazy and Gordon Stewart},
  title = {The {CompCert} Memory Model, Version 2},
  institution = {INRIA},
  type = {Research report},
  number = {RR-7987},
  year = {2012},
  month = jun,
  url = {http://hal.inria.fr/hal-00703441},
  xtopic = {compcert},
  abstract = {A memory model is an important component of the formal semantics of imperative programming languages: it specifies the behavior of operations over memory states, such as reads and writes. The formally verified CompCert C compiler uses a sophisticated memory model that is shared between the semantics of its source language (the CompCert subset of C) and intermediate languages. The algebraic properties of this memory model play an important role in the proofs of semantic preservation for the compiler. The initial design of the CompCert memory model is described in an article by Leroy and Blazy (J. Autom. Reasoning 2008). The present research report describes version 2 of this memory model, improving over the main limitations of version 1. The first improvement is to expose the byte-level, in-memory representation of integers and floats, while preserving desirable opaqueness properties of pointer values. The second improvement is the integration of a fine-grained mechanism of permissions (access rights), which supports more aggressive optimizations over read-only data, and paves the way towards shared-memory, data-race-free concurrency in the style of Appel's Verified Software Toolchain project.}
}
@inproceedings{compcomp,
 author = {Stewart, Gordon and Beringer, Lennart and Cuellar, Santiago and Appel, Andrew W.},
 title = {Compositional CompCert},
 booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 location = {Mumbai, India},
 pages = {275--287},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2676726.2676985},
 doi = {10.1145/2676726.2676985},
 acmid = {2676985},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compcert, compiler correctness},
}
@inproceedings{popl15,
 author = {Gu, Ronghui and Koenig, J{\'e}r{\'e}mie and Ramananandro, Tahina and Shao, Zhong and Wu, Xiongnan (Newman) and Weng, Shu-Chun and Zhang, Haozhong and Guo, Yu},
 title = {Deep Specifications and Certified Abstraction Layers},
 booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 location = {Mumbai, India},
 pages = {595--608},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2676726.2676975},
 doi = {10.1145/2676726.2676975},
 acmid = {2676975},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstraction layer, certified compilers, certified os kernels, deep specification, modularity, program verification},
}

@inproceedings{osdi16,
 author = {Gu, Ronghui and Shao, Zhong and Chen, Hao and Wu, Xiongnan and Kim, Jieung and Sj\"{o}berg, Vilhelm and Costanzo, David},
 title = {CertiKOS: An Extensible Architecture for Building Certified Concurrent OS Kernels},
 booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'16},
 year = {2016},
 isbn = {978-1-931971-33-1},
 location = {Savannah, GA, USA},
 pages = {653--669},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=3026877.3026928},
 acmid = {3026928},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@inproceedings{gamesem99,
  title={Game semantics},
  author={Abramsky, Samson and McCusker, Guy},
  booktitle={Computational logic: Proceedings of the 1997 Marktoberdorf Summer School},
  pages={1--56},
  year={1999},
  organization={Springer}
}
