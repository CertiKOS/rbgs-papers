@article{lrp,
 author = {Hermida, Claudio and Reddy, Uday S. and Robinson, Edmund P.},
 title = {Logical Relations and Parametricity - A Reynolds Programme for Category Theory and Programming Languages},
 journal = {Electron. Notes Theor. Comput. Sci.},
 issue_date = {March, 2014},
 volume = {303},
 month = mar,
 year = {2014},
 issn = {1571-0661},
 pages = {149--180},
 numpages = {32},
 url = {http://dx.doi.org/10.1016/j.entcs.2014.02.008},
 doi = {10.1016/j.entcs.2014.02.008},
 acmid = {2599154},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Category Theory, Data abstraction, Definability, Fibrations, Homomorphisms, Information hiding, Logical Relations, Natural Transformations, Parametric polymorphism, Reflexive Graphs, Relation lifting, Relational Parametricity, Universal algebra},
}
@techreport{compcertmmv2,
  author = {Xavier Leroy and Andrew W. Appel and Sandrine Blazy and Gordon Stewart},
  title = {The {CompCert} Memory Model, Version 2},
  institution = {INRIA},
  type = {Research report},
  number = {RR-7987},
  year = {2012},
  month = jun,
  url = {http://hal.inria.fr/hal-00703441},
  xtopic = {compcert},
  abstract = {A memory model is an important component of the formal semantics of imperative programming languages: it specifies the behavior of operations over memory states, such as reads and writes. The formally verified CompCert C compiler uses a sophisticated memory model that is shared between the semantics of its source language (the CompCert subset of C) and intermediate languages. The algebraic properties of this memory model play an important role in the proofs of semantic preservation for the compiler. The initial design of the CompCert memory model is described in an article by Leroy and Blazy (J. Autom. Reasoning 2008). The present research report describes version 2 of this memory model, improving over the main limitations of version 1. The first improvement is to expose the byte-level, in-memory representation of integers and floats, while preserving desirable opaqueness properties of pointer values. The second improvement is the integration of a fine-grained mechanism of permissions (access rights), which supports more aggressive optimizations over read-only data, and paves the way towards shared-memory, data-race-free concurrency in the style of Appel's Verified Software Toolchain project.}
}
@inproceedings{compcompcert,
 author = {Stewart, Gordon and Beringer, Lennart and Cuellar, Santiago and Appel, Andrew W.},
 title = {Compositional CompCert},
 booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 location = {Mumbai, India},
 pages = {275--287},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2676726.2676985},
 doi = {10.1145/2676726.2676985},
 acmid = {2676985},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compcert, compiler correctness},
}
@inproceedings{popl15,
 author = {Gu, Ronghui and Koenig, J{\'e}r{\'e}mie and Ramananandro, Tahina and Shao, Zhong and Wu, Xiongnan (Newman) and Weng, Shu-Chun and Zhang, Haozhong and Guo, Yu},
 title = {Deep Specifications and Certified Abstraction Layers},
 booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 location = {Mumbai, India},
 pages = {595--608},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2676726.2676975},
 doi = {10.1145/2676726.2676975},
 acmid = {2676975},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstraction layer, certified compilers, certified os kernels, deep specification, modularity, program verification},
}

@inproceedings{osdi16,
 author = {Gu, Ronghui and Shao, Zhong and Chen, Hao and Wu, Xiongnan and Kim, Jieung and Sj\"{o}berg, Vilhelm and Costanzo, David},
 title = {CertiKOS: An Extensible Architecture for Building Certified Concurrent OS Kernels},
 booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'16},
 year = {2016},
 isbn = {978-1-931971-33-1},
 location = {Savannah, GA, USA},
 pages = {653--669},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=3026877.3026928},
 acmid = {3026928},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@inproceedings{gamesem99,
  title={Game semantics},
  author={Abramsky, Samson and McCusker, Guy},
  booktitle={Computational logic: Proceedings of the 1997 Marktoberdorf Summer School},
  pages={1--56},
  year={1999},
  organization={Springer}
}

@inproceedings{gsgr,
  author = {Samson Abramsky and Kohei Honda and Guy Mccusker},
  title = {A Fully Abstract Game Semantics for General References},
  booktitle = {Proceedings of the Thirteenth Annual IEEE Symposium on Logic in Computer Science},
  year = {1998},
  pages = {334--344},
  publisher = {Society Press}
}

@inproceedings{csmith,
 author = {Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
 title = {Finding and Understanding Bugs in C Compilers},
 booktitle = {Proceedings of the 32Nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '11},
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {283--294},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993498.1993532},
 doi = {10.1145/1993498.1993532},
 acmid = {1993532},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated testing, compiler defect, compiler testing, random program generation, random testing},
}

@article{compcert,
 author = {Leroy, Xavier},
 title = {Formal Verification of a Realistic Compiler},
 journal = {Commun. ACM},
 issue_date = {July 2009},
 volume = {52},
 number = {7},
 month = jul,
 year = {2009},
 issn = {0001-0782},
 pages = {107--115},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1538788.1538814},
 doi = {10.1145/1538788.1538814},
 acmid = {1538814},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{vst,
 author = {Appel, Andrew W.},
 title = {Verified Software Toolchain},
 booktitle = {Proceedings of the 20th European Conference on Programming Languages and Systems: Part of the Joint European Conferences on Theory and Practice of Software},
 series = {ESOP'11/ETAPS'11},
 year = {2011},
 isbn = {978-3-642-19717-8},
 location = {Saarbr\&\#252;cken, Germany},
 pages = {1--17},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=1987211.1987212},
 acmid = {1987212},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{qompcert,
 author = {Carbonneaux, Quentin and Hoffmann, Jan and Ramananandro, Tahina and Shao, Zhong},
 title = {End-to-end Verification of Stack-space Bounds for C Programs},
 booktitle = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '14},
 year = {2014},
 isbn = {978-1-4503-2784-8},
 location = {Edinburgh, United Kingdom},
 pages = {270--281},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2594291.2594301},
 doi = {10.1145/2594291.2594301},
 acmid = {2594301},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler construction, formal verification, program logics, quantitative verification, stack-space bounds},
}

@article{compcerttso,
 author = {\v{S}ev\v{c}\'{\i}k, Jaroslav and Vafeiadis, Viktor and Zappa Nardelli, Francesco and Jagannathan, Suresh and Sewell, Peter},
 title = {CompCertTSO: A Verified Compiler for Relaxed-Memory Concurrency},
 journal = {J. ACM},
 issue_date = {June 2013},
 volume = {60},
 number = {3},
 month = jun,
 year = {2013},
 issn = {0004-5411},
 pages = {22:1--22:50},
 articleno = {22},
 numpages = {50},
 url = {http://doi.acm.org/10.1145/2487241.2487248},
 doi = {10.1145/2487241.2487248},
 acmid = {2487248},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Relaxed memory models, semantics, verified compilation},
}

@inproceedings{compcertshm,
  title={Verified Compilation for Shared-Memory C},
  author={Beringer, Lennart and Stewart, Gordon and Dockins, Robert and Appel, Andrew W},
  booktitle={ESOP'14},
  pages={107--127},
  year={2014}
}

@inproceedings{sepcompcert,
 author = {Kang, Jeehoon and Kim, Yoonseung and Hur, Chung-Kil and Dreyer, Derek and Vafeiadis, Viktor},
 title = {Lightweight Verification of Separate Compilation},
 booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '16},
 year = {2016},
 isbn = {978-1-4503-3549-2},
 location = {St. Petersburg, FL, USA},
 pages = {178--190},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2837614.2837642},
 doi = {10.1145/2837614.2837642},
 acmid = {2837642},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CompCert, Compositional compiler verification, separate compilation},
}

@inproceedings{cpp15,
 author = {Ramananandro, Tahina and Shao, Zhong and Weng, Shu-Chun and Koenig, J{\'e}r{\'e}mie and Fu, Yuchen},
 title = {A Compositional Semantics for Verified Separate Compilation and Linking},
 booktitle = {Proceedings of the 2015 Conference on Certified Programs and Proofs},
 series = {CPP '15},
 year = {2015},
 isbn = {978-1-4503-3296-5},
 location = {Mumbai, India},
 pages = {3--14},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2676724.2693167},
 doi = {10.1145/2676724.2693167},
 acmid = {2693167},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compositional semantics, horizontal composition, verified compilation and linking, vertical composition},
}

@inproceedings{gmos,
    author = {Luca De Alfaro},
    title = {Game models for open systems},
    booktitle = {Theory and Practice: Essays Dedicated to Zohar Manna on the Occasion of His 64th Birthday, volume 2772 of LNCS},
    year = {2004},
    pages = {269--289},
    publisher = {Springer}
}

@inbook{cspgs,
  author="Abramsky, Samson",
  editor="Roscoe, A.W. and Jones, Cliff B. and Wood, Kenneth R.",
  title="From CSP to Game Semantics",
  bookTitle="Reflections on the Work of C.A.R. Hoare",
  year="2010",
  publisher="Springer London",
  address="London",
  pages="33--45",
  abstract="In this short essay, we describe in informal terms how game semantics can be seen to arise as a perturbation of process calculi such as CSP, by making an explicit distinction between the r{\^o}les of the System and the Environment. Drawing out the consequences of this distinction uncovers a wealth of mathematical structure, with Game intuitions entering in a natural and compelling fashion. This leads ultimately to the elaboration of mathematically well-structured and behaviourally expressive semantic universes for computation. These provide a basis for fully abstract models of a wide range of programming languages, and lead on to algorithmic methods, with applications to compositional model-checking and program analysis.",
  isbn="978-1-84882-912-1",
  doi="10.1007/978-1-84882-912-1_2",
  url="https://doi.org/10.1007/978-1-84882-912-1_2"
}

@inproceedings{altref,
  author="Alur, Rajeev
  and Henzinger, Thomas A.
  and Kupferman, Orna
  and Vardi, Moshe Y.",
  editor="Sangiorgi, Davide
  and de Simone, Robert",
  title="Alternating refinement relations",
  booktitle="CONCUR'98 Concurrency Theory",
  year="1998",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="163--178",
  abstract="Alternating transition systems are a general model for composite systems which allow the study of collaborative as well as adversarial relationships between individual system components. Unlike in labeled transition systems, where each transition corresponds to a possible step of the system (which may involve some or all components), in alternating transition systems, each transition corresponds to a possible move in a game between the components. In this paper, we study refinement relations between alternating transition systems, such as ``Does the implementation refine the set A of specification components without constraining the components not in A?'' In particular, we generalize the definitions of the simulation and trace containment preorders from labeled transition systems to alternating transition systems. The generalizations are called alternating simulation and alternating trace containment. Unlike existing refinement relations, they allow the refinement of individual components within the context of a composite system description. We show that, like ordinary simulation, alternating simulation can be checked in polynomial time using a fixpoint computation algorithm. While ordinary trace containment is PSPACE-complete, we establish alternating trace containment to be EXPTIME-complete. Finally, we present logical characterizations for the two preorders in terms of ATL, a temporal logic capable of referring to games between system components.",
  isbn="978-3-540-68455-8"
}

@inproceedings{pts,
 author = {Hutchins, DeLesley S.},
 title = {Pure Subtype Systems},
 booktitle = {Proceedings of the 37th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '10},
 year = {2010},
 isbn = {978-1-60558-479-9},
 location = {Madrid, Spain},
 pages = {287--298},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1706299.1706334},
 doi = {10.1145/1706299.1706334},
 acmid = {1706334},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract reduction systems, dependent types, singleton types, subtyping, transitivity elimination},
}

@inproceedings{coindbs,
author="Leroy, Xavier",
editor="Sestoft, Peter",
title="Coinductive Big-Step Operational Semantics",
booktitle="Programming Languages and Systems",
year="2006",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="54--68",
abstract="This paper illustrates the use of coinductive definitions and proofs in big-step operational semantics, enabling the latter to describe diverging evaluations in addition to terminating evaluations. We show applications to proofs of type soundness and to proofs of semantic preservation for compilers.",
isbn="978-3-540-33096-7"
}

@techreport{tka,
  title={Typed kleene algebra},
  author={Kozen, Dexter},
  year={1998},
  institution={Cornell University}
}

@inproceedings{sel4,
  title={seL4: Formal verification of an OS kernel},
  author={Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and
Andronick, June and Cock, David and Derrin, Philip and Elkaduwe, Dhammika and
Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael and others},
  booktitle={Proceedings of the ACM SIGOPS 22nd symposium on Operating systems
principles},
  pages={207--220},
  year={2009},
  organization={ACM}
}

@article{deepspec,
  title={Position paper: the science of deep specification},
  author={Appel, Andrew W and Beringer, Lennart and Chlipala, Adam and Pierce,
Benjamin C and Shao, Zhong and Weirich, Stephanie and Zdancewic, Steve},
  journal={Philosophical Transactions of the Royal Society A: Mathematical,
Physical and Engineering Sciences},
  volume={375},
  number={2104},
  pages={20160331},
  year={2017},
  publisher={The Royal Society Publishing}
}

@inproceedings{vellvm,
  title={Formalizing the LLVM intermediate representation for verified program
transformations},
  author={Zhao, Jianzhou and Nagarakatte, Santosh and Martin, Milo MK and
Zdancewic, Steve},
  booktitle={Acm sigplan notices},
  volume={47},
  number={1},
  pages={427--440},
  year={2012},
  organization={ACM}
}

@inproceedings{fscq,
  title={Using Crash Hoare logic for certifying the FSCQ file system},
  author={Chen, Haogang and Ziegler, Daniel and Chajed, Tej and Chlipala, Adam
and Kaashoek, M Frans and Zeldovich, Nickolai},
  booktitle={Proceedings of the 25th Symposium on Operating Systems
Principles},
  pages={18--37},
  year={2015},
  organization={ACM}
}

@inproceedings{safe,
  title={A verified information-flow architecture},
  author={Azevedo de Amorim, Arthur and Collins, Nathan and DeHon, Andr{\'e}
and Demange, Delphine and Hri{\c{t}}cu, C{\u{a}}t{\u{a}}lin and Pichardie,
David and Pierce, Benjamin C and Pollack, Randy and Tolmach, Andrew},
  booktitle={ACM SIGPLAN Notices},
  volume={49},
  number={1},
  pages={165--178},
  year={2014},
  organization={ACM}
}

@inproceedings{gsnondet,
  title={A fully abstract game semantics for finite nondeterminism},
  author={Harmer, Russell and McCusker, Guy},
  booktitle={Proceedings. 14th Symposium on Logic in Computer Science (Cat.
No. PR00158)},
  pages={422--430},
  year={1999},
  organization={IEEE}
}
